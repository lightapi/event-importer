utgdG50vRVOX3mL1Kf83aAnet.lightapi.portal.config.ConfigCreatedEvent{"EventId":{"id":"1cln4dMsQpG8jkN-8gR9Ng","userId":"utgdG50vRVOX3mL1Kf83aA","hostId":"N2CMw0HGQXeLvC1wBfln2A","nonce":6,"timestamp":1740186024540,"derived":false},"configId":"eP42U1_pSFahIvUqQEjG6g","configName":"token-limit","configType":"Handler","value":"{\"hostId\":\"N2CMw0HGQXeLvC1wBfln2A\",\"light4jVersion\":\"2.2.0\",\"classPath\":\"com.networknt.token.limit.TokenLimitHandler\",\"configDesc\":\"The config used by handler token-limit. This handler should be used on the oauth-kafka or a dedicated light-gateway instance for all OAuth 2.0 instances or providers.\"}"}
utgdG50vRVOX3mL1Kf83aAnet.lightapi.portal.config.ConfigPropertyCreatedEvent{"EventId":{"id":"rU3fzRBLQPa0eafd5Q5hsg","userId":"utgdG50vRVOX3mL1Kf83aA","hostId":"N2CMw0HGQXeLvC1wBfln2A","nonce":17,"timestamp":1740188646869,"derived":false},"configId":"eP42U1_pSFahIvUqQEjG6g","propertyName":"enable","propertyType":"Config","value":"{\"hostId\":\"N2CMw0HGQXeLvC1wBfln2A\",\"light4jVersion\":\"2.2.0\",\"valueType\":\"boolean\",\"resourceType\":\"none\",\"displayOrder\":1,\"propertyDesc\":\"It indicates if the handler is enabled or not. By default, it is enabled.\",\"propertyValue\":\"true\"}"}
utgdG50vRVOX3mL1Kf83aAnet.lightapi.portal.config.ConfigPropertyCreatedEvent{"EventId":{"id":"7QANKYjWRRCv8iAb2nPNug","userId":"utgdG50vRVOX3mL1Kf83aA","hostId":"N2CMw0HGQXeLvC1wBfln2A","nonce":18,"timestamp":1740188703293,"derived":false},"configId":"eP42U1_pSFahIvUqQEjG6g","propertyName":"errorOnLimit","propertyType":"Config","value":"{\"hostId\":\"N2CMw0HGQXeLvC1wBfln2A\",\"light4jVersion\":\"2.2.0\",\"valueType\":\"boolean\",\"resourceType\":\"none\",\"propertyDesc\":\"It returns an error if limit is reached. It should be the default behavior on dev/sit/stg. For production, a warning message should be logged. Also, this handler can be disabled on production for performance.\",\"displayOrder\":2,\"propertyValue\":\"true\"}"}
utgdG50vRVOX3mL1Kf83aAnet.lightapi.portal.config.ConfigPropertyCreatedEvent{"EventId":{"id":"YVh05y_MQj6Br_npbTj93A","userId":"utgdG50vRVOX3mL1Kf83aA","hostId":"N2CMw0HGQXeLvC1wBfln2A","nonce":19,"timestamp":1740188748131,"derived":false},"configId":"eP42U1_pSFahIvUqQEjG6g","propertyName":"duplicateLimit","propertyType":"Config","value":"{\"hostId\":\"N2CMw0HGQXeLvC1wBfln2A\",\"light4jVersion\":\"2.2.0\",\"valueType\":\"integer\",\"resourceType\":\"none\",\"displayOrder\":3,\"propertyDesc\":\"The max number of duplicated token requests. Once this number is passed, the limit is triggered. This number is set based on the number of client instances as each instance might get its token if there is no distributed cache. The duplicated tokens are calculated based on the local in memory cache per light-gateway or oauth-kafka instance. Note: cache.yml needs to be configured.\",\"propertyValue\":\"2\"}"}
utgdG50vRVOX3mL1Kf83aAnet.lightapi.portal.config.ConfigPropertyCreatedEvent{"EventId":{"id":"6ntLJjyWRnC8kRoGIL5lEA","userId":"utgdG50vRVOX3mL1Kf83aA","hostId":"N2CMw0HGQXeLvC1wBfln2A","nonce":20,"timestamp":1740188834217,"derived":false},"configId":"eP42U1_pSFahIvUqQEjG6g","propertyName":"tokenPathTemplates","propertyType":"Config","value":"{\"hostId\":\"N2CMw0HGQXeLvC1wBfln2A\",\"light4jVersion\":\"2.2.0\",\"valueType\":\"list\",\"resourceType\":\"none\",\"propertyDesc\":\"Different OAuth 2.0 providers have different token request path. To make sure that this handler only applied to the token endpoint, we define a list of path templates here to ensure request path is matched. The following is an example with two different OAuth 2.0 providers in values.yml file. Example: token-limit.tokenPathTemplates: [ '/oauth2/(?<instanceId>[^/]+)/v1/token', '/oauth2/(?<instanceId>[^/]+)/token']\",\"displayOrder\":4}"}
utgdG50vRVOX3mL1Kf83aAnet.lightapi.portal.config.ConfigPropertyCreatedEvent{"EventId":{"id":"KgP6CRpMSCGXp0wETFbw_A","userId":"utgdG50vRVOX3mL1Kf83aA","hostId":"N2CMw0HGQXeLvC1wBfln2A","nonce":21,"timestamp":1740188895415,"derived":false},"configId":"eP42U1_pSFahIvUqQEjG6g","propertyName":"legacyClient","propertyType":"Config","value":"{\"hostId\":\"N2CMw0HGQXeLvC1wBfln2A\",\"light4jVersion\":\"2.2.0\",\"valueType\":\"list\",\"resourceType\":\"none\",\"displayOrder\":5,\"propertyDesc\":\"List of ClientID that should be treated as Legacy and thus excluded from the token limit rules. This should only be used by approved legacy clients. The client ID is case insensitive. Example: token-limit.legacyClient: ['5oa66u56irXiekTUF1d6', '6oa66u56irXiekABC1d4']\"}"}
utgdG50vRVOX3mL1Kf83aAnet.lightapi.portal.config.ConfigPropertyCreatedEvent{"EventId":{"id":"R5DQwxCaTMCCYzaa9PL5Kg","userId":"utgdG50vRVOX3mL1Kf83aA","hostId":"N2CMw0HGQXeLvC1wBfln2A","nonce":22,"timestamp":1740188996924,"derived":false},"configId":"8ckp5cDKS6651g1WQiZdgQ","propertyName":"pathPrefixEncoding","propertyType":"Config","value":"{\"hostId\":\"N2CMw0HGQXeLvC1wBfln2A\",\"light4jVersion\":\"2.2.0\",\"valueType\":\"list\",\"resourceType\":\"api\",\"displayOrder\":5,\"propertyDesc\":\"For certain path prefixes that are not using the defaultBodyEncoding UTF-8, you can define the customized encoding like ISO-8859-1 for the path prefixes here. This is only for the legacy APIs that can only accept ISO-8859-1 response body but the backend server is sending the response in UTF-8 as it is standard on the Web. Example: pathPrefixEncoding: [ /v1/pets: ISO-8859-1, /v1/party/info: ISO-8859-1 ]\"}"}
utgdG50vRVOX3mL1Kf83aAnet.lightapi.portal.config.ConfigCreatedEvent{"EventId":{"id":"QUOskzOQSwubqUeiPlq5jg","userId":"utgdG50vRVOX3mL1Kf83aA","hostId":"N2CMw0HGQXeLvC1wBfln2A","nonce":25,"timestamp":1740189118566,"derived":false},"configId":"rJBRHyFxRzqxGcRVjyNWTQ","configName":"response-cache","configType":"Handler","value":"{\"hostId\":\"N2CMw0HGQXeLvC1wBfln2A\",\"light4jVersion\":\"2.2.0\",\"configDesc\":\"This config is used by ResponseCacheInterceptor, which is a generic response interceptor for caching the downstream response to save the external API calls on the light-gateway or http-sidecar. Please make sure that you only cache the response for certain period of time you know it will be the same. Another usage is to cache the jwt tokens from cloud service to save the cost as a token can last at 10 to 20 minutes. The interceptor depending on the cache.yml configuration to set up a cache and expiration time. It checks exchange attachment to determine if it takes action with the cache name and the key for the cache. The usage of the cache is up for the individual handle who is sending the attachment. Please note that the interceptor will only take action if response code is successful (less than 400).\",\"classPath\":\"com.networknt.restrans.ResponseCacheInterceptor\"}"}
utgdG50vRVOX3mL1Kf83aAnet.lightapi.portal.config.ConfigPropertyCreatedEvent{"EventId":{"id":"LRg6DbSvSMmPmo5ARG0q9A","userId":"utgdG50vRVOX3mL1Kf83aA","hostId":"N2CMw0HGQXeLvC1wBfln2A","nonce":26,"timestamp":1740189185210,"derived":false},"configId":"rJBRHyFxRzqxGcRVjyNWTQ","propertyName":"enabled","propertyType":"Config","value":"{\"hostId\":\"N2CMw0HGQXeLvC1wBfln2A\",\"light4jVersion\":\"2.2.0\",\"valueType\":\"boolean\",\"resourceType\":\"none\",\"displayOrder\":1,\"propertyDesc\":\"This indicates if the interceptor is enabled or not.\",\"propertyValue\":\"true\"}"}
utgdG50vRVOX3mL1Kf83aAnet.lightapi.portal.config.ConfigPropertyCreatedEvent{"EventId":{"id":"m-AvF3biSmOBHEkTJ9Khvw","userId":"utgdG50vRVOX3mL1Kf83aA","hostId":"N2CMw0HGQXeLvC1wBfln2A","nonce":27,"timestamp":1740189249378,"derived":false},"configId":"rJBRHyFxRzqxGcRVjyNWTQ","propertyName":"appliedPathPrefixes","propertyType":"Config","value":"{\"hostId\":\"N2CMw0HGQXeLvC1wBfln2A\",\"light4jVersion\":\"2.2.0\",\"valueType\":\"list\",\"resourceType\":\"api\",\"propertyDesc\":\"A list of applied request path prefixes, other requests will skip this handler.\",\"displayOrder\":2}"}
utgdG50vRVOX3mL1Kf83aAnet.lightapi.portal.config.ConfigPropertyCreatedEvent{"EventId":{"id":"jhHashRwSFqa1HP3Ff5pRg","userId":"utgdG50vRVOX3mL1Kf83aA","hostId":"N2CMw0HGQXeLvC1wBfln2A","nonce":28,"timestamp":1740189387695,"derived":false},"configId":"fYhRgziBRLabCJeNrA7NqQ","propertyName":"accessRuleLogic","propertyType":"Config","value":"{\"hostId\":\"N2CMw0HGQXeLvC1wBfln2A\",\"light4jVersion\":\"2.2.0\",\"valueType\":\"string\",\"resourceType\":\"none\",\"propertyValue\":\"any\",\"propertyDesc\":\"If there are multiple rules, the logic to combine them can be any or all. The default is any, and it means that any rule is satisfied, the access is granted. If all is set, all rules must be satisfied.\",\"displayOrder\":4}"}
utgdG50vRVOX3mL1Kf83aAnet.lightapi.portal.config.ConfigCreatedEvent{"EventId":{"id":"L7_94IHoRiyWLkGQO_aysA","userId":"utgdG50vRVOX3mL1Kf83aA","hostId":"N2CMw0HGQXeLvC1wBfln2A","nonce":29,"timestamp":1740189441741,"derived":false},"configId":"7Oy22K9sSMalOQ778-CP6w","configName":"response-filter","configType":"Handler","value":"{\"hostId\":\"N2CMw0HGQXeLvC1wBfln2A\",\"light4jVersion\":\"2.2.0\",\"configDesc\":\"This config is used by ResponseFilterInterceptor. This is a response filter interceptor that is used to filter the response body based on the fine-grained authorization configuration for the endpoint. Unlike the transformer interceptor, this interceptor only deals with the response body.  The passed in parameter is the original response body and the result is the filtered response body. As there might be several rules to execute in a loop, the previous rule execution result response body will be feed to the next rule in order to perform filter further. The final result will be returned as the response body to the client.\",\"classPath\":\"com.networknt.restrans.ResponseFilterInterceptor\"}"}
utgdG50vRVOX3mL1Kf83aAnet.lightapi.portal.config.ConfigPropertyCreatedEvent{"EventId":{"id":"EbI0gzQySnS2BxqKFWsuGA","userId":"utgdG50vRVOX3mL1Kf83aA","hostId":"N2CMw0HGQXeLvC1wBfln2A","nonce":30,"timestamp":1740189490720,"derived":false},"configId":"7Oy22K9sSMalOQ778-CP6w","propertyName":"enabled","propertyType":"Config","value":"{\"hostId\":\"N2CMw0HGQXeLvC1wBfln2A\",\"light4jVersion\":\"2.2.0\",\"valueType\":\"boolean\",\"resourceType\":\"none\",\"displayOrder\":1,\"propertyDesc\":\"This indicates if the interceptor is enabled or not.\",\"propertyValue\":\"true\"}"}
utgdG50vRVOX3mL1Kf83aAnet.lightapi.portal.config.ConfigPropertyCreatedEvent{"EventId":{"id":"ZlmPMig0SAmbYz7TfYPSmQ","userId":"utgdG50vRVOX3mL1Kf83aA","hostId":"N2CMw0HGQXeLvC1wBfln2A","nonce":31,"timestamp":1740189538139,"derived":false},"configId":"7Oy22K9sSMalOQ778-CP6w","propertyName":"appliedPathPrefixes","propertyType":"Config","value":"{\"hostId\":\"N2CMw0HGQXeLvC1wBfln2A\",\"light4jVersion\":\"2.2.0\",\"valueType\":\"list\",\"resourceType\":\"api\",\"displayOrder\":2,\"propertyDesc\":\"A list of applied request path prefixes, other requests will skip this handler.\"}"}
utgdG50vRVOX3mL1Kf83aAnet.lightapi.portal.config.ConfigPropertyCreatedEvent{"EventId":{"id":"jk-OmZPzSda86W8tqkmIlA","userId":"utgdG50vRVOX3mL1Kf83aA","hostId":"N2CMw0HGQXeLvC1wBfln2A","nonce":34,"timestamp":1740189636868,"derived":false},"configId":"rZ4wnM6HTUazla5t5N1eRQ","propertyName":"maxConnectionRetries","propertyType":"Config","value":"{\"hostId\":\"N2CMw0HGQXeLvC1wBfln2A\",\"light4jVersion\":\"2.2.0\",\"valueType\":\"integer\",\"resourceType\":\"none\",\"displayOrder\":9,\"propertyDesc\":\"Max Connection Retries\",\"propertyValue\":\"3\"}"}
utgdG50vRVOX3mL1Kf83aAnet.lightapi.portal.config.ConfigCreatedEvent{"EventId":{"id":"sBys1bLuTNOPimijFDna_g","userId":"utgdG50vRVOX3mL1Kf83aA","hostId":"N2CMw0HGQXeLvC1wBfln2A","nonce":35,"timestamp":1740189711407,"derived":false},"configId":"Pq-iQ2dUS5ueR33GZu9HEA","configName":"expect-100-continue","configType":"Handler","value":"{\"hostId\":\"N2CMw0HGQXeLvC1wBfln2A\",\"light4jVersion\":\"2.2.0\",\"configDesc\":\"This configuration is used by Expect100ContinueHandler.\",\"classPath\":\"com.networknt.handler.Expect100ContinueHandler\"}"}
utgdG50vRVOX3mL1Kf83aAnet.lightapi.portal.config.ConfigPropertyCreatedEvent{"EventId":{"id":"pjrDEMBMRoeMIqetebPWag","userId":"utgdG50vRVOX3mL1Kf83aA","hostId":"N2CMw0HGQXeLvC1wBfln2A","nonce":36,"timestamp":1740189749729,"derived":false},"configId":"Pq-iQ2dUS5ueR33GZu9HEA","propertyName":"enabled","propertyType":"Config","value":"{\"hostId\":\"N2CMw0HGQXeLvC1wBfln2A\",\"light4jVersion\":\"2.2.0\",\"valueType\":\"boolean\",\"resourceType\":\"none\",\"displayOrder\":1,\"propertyDesc\":\"enable/disable the handler\",\"propertyValue\":\"true\"}"}
utgdG50vRVOX3mL1Kf83aAnet.lightapi.portal.config.ConfigPropertyCreatedEvent{"EventId":{"id":"0NKk7iyaRBeJDttp5CsJ1A","userId":"utgdG50vRVOX3mL1Kf83aA","hostId":"N2CMw0HGQXeLvC1wBfln2A","nonce":37,"timestamp":1740189803755,"derived":false},"configId":"Pq-iQ2dUS5ueR33GZu9HEA","propertyName":"ignoredPathPrefixes","propertyType":"Config","value":"{\"hostId\":\"N2CMw0HGQXeLvC1wBfln2A\",\"light4jVersion\":\"2.2.0\",\"valueType\":\"list\",\"resourceType\":\"api\",\"propertyDesc\":\"List of paths that will not follow the expect-100-continue protocol. The Expect header will be removed altogether.format is in string list format (i.e. '[path1, path2]')\",\"displayOrder\":2}"}
utgdG50vRVOX3mL1Kf83aAnet.lightapi.portal.config.ConfigPropertyCreatedEvent{"EventId":{"id":"h28ZymzvT0O5e2VeLmB5jA","userId":"utgdG50vRVOX3mL1Kf83aA","hostId":"N2CMw0HGQXeLvC1wBfln2A","nonce":38,"timestamp":1740189855404,"derived":false},"configId":"Pq-iQ2dUS5ueR33GZu9HEA","propertyName":"inPlacePathPrefixes","propertyType":"Config","value":"{\"hostId\":\"N2CMw0HGQXeLvC1wBfln2A\",\"light4jVersion\":\"2.2.0\",\"valueType\":\"list\",\"resourceType\":\"api\",\"displayOrder\":3,\"propertyDesc\":\"List of paths that will respond 100-continue in place before continuing execution of the remaining handlers. The Expect header will be removed after the response is sent.\"}"}
utgdG50vRVOX3mL1Kf83aAnet.lightapi.portal.config.ConfigPropertyCreatedEvent{"EventId":{"id":"slLo4ETfSqOSgnoIXAueJg","userId":"utgdG50vRVOX3mL1Kf83aA","hostId":"N2CMw0HGQXeLvC1wBfln2A","nonce":39,"timestamp":1740189955387,"derived":false},"configId":"JifwmaiZStGjABMjirHulg","propertyName":"pathPrefixEncoding","propertyType":"Config","value":"{\"hostId\":\"N2CMw0HGQXeLvC1wBfln2A\",\"light4jVersion\":\"2.2.0\",\"valueType\":\"list\",\"resourceType\":\"api\",\"propertyDesc\":\"For certain path prefixes that are not using the defaultBodyEncoding UTF-8, you can define the customized encoding like ISO-8859-1 for the path prefixes here. This is only for the legacy APIs that can only accept ISO-8859-1 response body but the consumer is sending the request in UTF-8 as it is standard on the Web. Example: pathPrefixEncoding: [ /v1/pets: ISO-8859-1, /v1/party/info: ISO-8859-1 ]\",\"displayOrder\":5}"}
utgdG50vRVOX3mL1Kf83aAnet.lightapi.portal.config.ConfigPropertyCreatedEvent{"EventId":{"id":"6hTqljzHQ426AtZ9P_JUZg","userId":"utgdG50vRVOX3mL1Kf83aA","hostId":"N2CMw0HGQXeLvC1wBfln2A","nonce":40,"timestamp":1740190076115,"derived":false},"configId":"Qj7QthkcR1eYT1QxgNw3Jw","propertyName":"pathPrefixAllowed","propertyType":"Config","value":"{\"hostId\":\"N2CMw0HGQXeLvC1wBfln2A\",\"light4jVersion\":\"2.2.0\",\"valueType\":\"list\",\"resourceType\":\"api\",\"displayOrder\":4,\"propertyDesc\":\"Cors configuration per path prefix on a shared gateway. You either have allowedOrigins and allowedMethods or you have pathPrefixAllowed. You can't have both. If you have both, pathPrefixAllowed will be used. The value is a map with the key as the path prefix and the value is another map with allowedOrigins and allowedMethods. The allowedOrigins is a list of strings and allowedMethods is a list of strings. Use the global configuration if you are dealing with a single API in the case of http-sidecar, proxy server or build the API with light-4j frameworks. If you are using light-gateway with multiple downstream APIs, you can use the pathPrefixAllowed to set up different CORS configuration for different APIs.\"}"}
utgdG50vRVOX3mL1Kf83aAnet.lightapi.portal.config.ConfigPropertyCreatedEvent{"EventId":{"id":"Tld4SW5bQt2sgV-tY4bcPQ","userId":"utgdG50vRVOX3mL1Kf83aA","hostId":"N2CMw0HGQXeLvC1wBfln2A","nonce":43,"timestamp":1740190296615,"derived":false},"configId":"6FBJ5u4fTkW4WhdvLQzixQ","propertyName":"headersAlwaysSet","propertyType":"Config","value":"{\"hostId\":\"N2CMw0HGQXeLvC1wBfln2A\",\"light4jVersion\":\"2.2.0\",\"valueType\":\"boolean\",\"resourceType\":\"none\",\"displayOrder\":14,\"propertyDesc\":\"By default, the rate limit headers are not set when limit is not reached. However, you can overwrite the behavior with true to write the three rate limit headers for 200 response in order for client to manage the flow of the requests.\",\"propertyValue\":\"false\"}"}
utgdG50vRVOX3mL1Kf83aAnet.lightapi.portal.config.ConfigPropertyCreatedEvent{"EventId":{"id":"hM_LX9t8T8WvNiRJlAfa-g","userId":"utgdG50vRVOX3mL1Kf83aA","hostId":"N2CMw0HGQXeLvC1wBfln2A","nonce":44,"timestamp":1740190407221,"derived":false},"configId":"EVu6rZRYShW1ZnMjznjB9A","propertyName":"legacyPathType","propertyType":"Config","value":"{\"hostId\":\"N2CMw0HGQXeLvC1wBfln2A\",\"light4jVersion\":\"2.2.0\",\"valueType\":\"boolean\",\"resourceType\":\"none\",\"displayOrder\":7,\"propertyDesc\":\"By default, the json-schema-validator will return the error message using JSON_POINTER path type. If you want to make sure that the error message is the same as the older version, you can set the legacyPathType to true.\",\"propertyValue\":\"false\"}"}
utgdG50vRVOX3mL1Kf83aAnet.lightapi.portal.config.ConfigPropertyCreatedEvent{"EventId":{"id":"jlFj4ClKTMKwTt6zo8o2KA","userId":"utgdG50vRVOX3mL1Kf83aA","hostId":"N2CMw0HGQXeLvC1wBfln2A","nonce":1,"timestamp":1740193364774,"derived":false},"configId":"T1hy8MWXS2WnJIQ2e9m5PQ","propertyName":"maxRequestRetry","propertyType":"Config","value":"{\"hostId\":\"N2CMw0HGQXeLvC1wBfln2A\",\"light4jVersion\":\"2.2.0\",\"valueType\":\"integer\",\"resourceType\":\"none\",\"displayOrder\":79,\"propertyDesc\":\"Maximum request retry times for each request. If you don't want to retry, set it to 1.\",\"propertyValue\":\"3\"}"}
utgdG50vRVOX3mL1Kf83aAnet.lightapi.portal.config.ConfigPropertyCreatedEvent{"EventId":{"id":"dVtcUXlvRJSXF_3uBl_QXg","userId":"utgdG50vRVOX3mL1Kf83aA","hostId":"N2CMw0HGQXeLvC1wBfln2A","nonce":5,"timestamp":1740193480043,"derived":false},"configId":"T1hy8MWXS2WnJIQ2e9m5PQ","propertyName":"requestRetryDelay","propertyType":"Config","value":"{\"hostId\":\"N2CMw0HGQXeLvC1wBfln2A\",\"light4jVersion\":\"2.2.0\",\"valueType\":\"integer\",\"resourceType\":\"none\",\"displayOrder\":80,\"propertyDesc\":\"The delay time in milliseconds for each request retry.\",\"propertyValue\":\"1000\"}"}
